<?xml version="1.0"?>
<mx:Application name="lightspark_Array_test"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	applicationComplete="appComplete();"
	backgroundColor="white">

<mx:Script>
	<![CDATA[
	import Tests;

	private function multiply3(item:*, index:int, array:Array):void {
		array[index] = item * 3;
	}

	private function appComplete():void
	{
		var array:Array = new Array();
		Tests.assertArrayEquals([], array, "Array(): no-argument constructor, 0 elements", true);
		array.push("test1");
		Tests.assertArrayEquals(["test1"], array, "push(): first element", true);
		array.push(2.5);
		Tests.assertArrayEquals(["test1", 2.5], array, "push(): second element", true);
		array.push("test3");
		Tests.assertArrayEquals(["test1", 2.5, "test3"], array, "push(): third element", true);
	
		var names:Array = new Array();
		for(var name:String in array)
		{
			names.push(name);
		}
		Tests.assertArrayEquals([0, 1, 2], names, "'in' keyword", true);
		
		var a:Array=[76, 12, "3" ];

		a.sort();
		Tests.assertArrayEquals(a, new Array(12, "3", 76), "sort(): normal sort", true);

		a.sort(Array.NUMERIC);
		Tests.assertArrayEquals(a, new Array("3", 12, 76), "sort(): numeric sort", true);

		var b:Array=[ 1, 2, 3 ];
		b.forEach(multiply3);
		Tests.assertArrayEquals(b, new Array(3, 6, 9), "forEach()");

		var c:Array=[ 1, 2, 3 ];
		c.reverse();
		Tests.assertArrayEquals(c, new Array(3, 2, 1), "reverse()");

		var d:Array=[ 2, 1, 2, 3 ];
		Tests.assertEquals(d.indexOf(2), 0, "indexOf() single parameter");
		Tests.assertEquals(d.indexOf(2, 1), 2, "indexOf() two parameters");

		var e:Array=[ 2, 1, 2, 3 ];
		Tests.assertEquals(d.lastIndexOf(2), 2, "lastIndexOf() single parameter");
		Tests.assertEquals(d.lastIndexOf(2, 1), 0, "lastIndexOf() two parameters");

		Tests.report(visual, this.name);
	}
	]]>
</mx:Script>

<mx:UIComponent id="visual" />

</mx:Application>
